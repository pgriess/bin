#!/usr/bin/env node
/*
 * Run the Mozilla Readability (https://github.com/mozilla/readability) library
 * against a webpage from stdin.
 *
 * This intentionally does almost no formatting / etc as I don't want to take
 * any more of a dependency on JavaScript than strictly necessary. Any pre- or
 * post-processing can be done by other tools.
 *
 * TODO:
 *
 *  - Accept URL in positional argument; fetch and use to populate the uri
 *    structure
 *  - Add to pgriess/bin on GitHub
 *  - Handle Unicode characters in HTML content? Or is that just an artifact of
 *    how I happened to save the test file?
 *  - Send out PRs for Readability changes (Node constants, dump impl)
 *  - Add package.json(?) file for fetching dependencies
 *  - Fetch external resources? How does CSS affect styling?
 *
 * XXX Other:
 *
 *  - Test conversion of HTML to Kindle
 *      - Kindle email gateway
 *      - Calibre (all formats?)
 *  - Economist available as Kindle subscription? Subscribe?
 *  - Longreads to Kindle (webapp? RSS feed?)
 */

var jsdom = require("jsdom").jsdom;
var process = require("process");
var Readability = require("readability/Readability");

var htmlContent = "";
process.stdin.setEncoding("utf8");
process.stdin.on("data", (chunk) => {
    htmlContent += chunk;
});
process.stdin.on("end", () => {
    var doc = jsdom(htmlContent, {
        features: {
            FetchExternalResources: false,
            ProcessExternalResources: false
        }
    });
    var uri = {
        spec: "http://localhost/index.html",
        host: "localhost",
        prePath: "http://localhost",
        scheme: "http",
        pathBase: "http://localhost/",
    };
    var rp = new Readability(uri, doc).parse();
    process.stdout.write(JSON.stringify(rp) + "\n");
});
